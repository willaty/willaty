<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>willaty</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-04-28T14:20:06.548Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>willaty</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>类型声明</title>
    <link href="http://yoursite.com/2017/04/28/var/"/>
    <id>http://yoursite.com/2017/04/28/var/</id>
    <published>2017-04-28T14:10:05.878Z</published>
    <updated>2017-04-28T14:20:06.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="各种声明符"><a href="#各种声明符" class="headerlink" title="各种声明符:"></a>各种声明符:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">`存储类说明符*: auto、register、static、extern.`</div><div class="line">-&gt;在声明时，存储类修饰符最多只能使用一个，而且无法用在typedef声明中.</div><div class="line">`类型限定符`是指: const、volatile、restrict.</div><div class="line">-&gt;声明中可以使用多个类型限定符，顺序没有限制.</div><div class="line">-&gt;另外，类型限制符可以用在typeof声明中</div></pre></td></tr></table></figure>
<h2 id="类型声明优先级"><a href="#类型声明优先级" class="headerlink" title="类型声明优先级"></a>类型声明优先级</h2><p>括号&gt;后缀&gt;前缀,从内到外阅读即可.<br>函数与数组不能相互派生,大小都不可知.<br><code>只有指针,函数,数组能传递下去定义(函数参数不算),出现内置类型则终止.</code><br><code>英文:pointer to; function(int) returning int; array of</code></p>
<h2 id="关于const的锁"><a href="#关于const的锁" class="headerlink" title="关于const的锁:"></a>关于const的锁:</h2><p>锁住的是后面的对象; 是<em>则锁内容,是标识符则锁指向.<br>或用英文理解:char const </em>p; //p is a pointer to read-only char.<br>ps: const锁什么什么在先,锁内容:常量指针; 锁指针:指针常量.<br>ps: 在primer中,用顶层const(top-level const)表示锁的是指针,底层(low-level const)锁的是指针指向常量.</p>
<h2 id="内置类型初始化"><a href="#内置类型初始化" class="headerlink" title="内置类型初始化:"></a>内置类型初始化:</h2><p>在函数内定义的内置对象若没被初始化,值未定义.<br>在函数外定义的,<code>默认初始化为0</code>.<br>列表初始化,C++11新标准,(如果可能出现信息丢失,则会出错,不能初始化)</p>
<h2 id="常量表达式"><a href="#常量表达式" class="headerlink" title="常量表达式:"></a>常量表达式:</h2><p>值不会改变,且在编译阶段就能计算出的表达式.</p>
<h2 id="字面值常量"><a href="#字面值常量" class="headerlink" title="字面值常量:"></a>字面值常量:</h2><ol>
<li>整型:适合int就int,比int大就long.</li>
<li>可加后缀改变,F(单精度),L(若是浮点就扩展精度),不区分大小写.</li>
<li>bool:true和false</li>
<li>字符型:’a’等</li>
<li>字符串型:”abc”,<code>编译器会自动补空字符</code>.</li>
<li>多行字符串:行尾用\,后不能有任何字符.<br><code>ps: 字面值常量一定是常量表达式,往往在编译阶段接替换成立即数</code></li>
</ol>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h3><ol>
<li>头文件中不应含using.</li>
</ol>
<blockquote>
<p>辛苦总结,转载请注明出处,共享共成长:<a href="http://blog.leanote.com/willaty" target="_blank" rel="external">http://blog.leanote.com/willaty</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;各种声明符&quot;&gt;&lt;a href=&quot;#各种声明符&quot; class=&quot;headerlink&quot; title=&quot;各种声明符:&quot;&gt;&lt;/a&gt;各种声明符:&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/04/26/hello-world/"/>
    <id>http://yoursite.com/2017/04/26/hello-world/</id>
    <published>2017-04-26T04:44:51.329Z</published>
    <updated>2017-04-28T14:08:46.053Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h1 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h1><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
